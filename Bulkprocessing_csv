import os
import pandas as pd
import json
import tkinter as tk
from tkinter import filedialog, messagebox

def process_fixed_width_files(folder_path, config_path):
    """
    Process files in a folder based on fixed width split rules and column naming specified in a JSON config file.

    :param folder_path: Path to the folder containing the files
    :param config_path: Path to the JSON configuration file
    """
    try:
        # Load the configuration file
        with open(config_path, 'r') as f:
            config = json.load(f)

        files = os.listdir(folder_path)

        for file_name in files:
            file_path = os.path.join(folder_path, file_name)

            if os.path.isfile(file_path) and file_name in config:
                widths = config[file_name]["widths"]
                columns = config[file_name]["columns"]

                try:
                    # Read the file using fixed width format
                    df = pd.read_fwf(file_path, widths=widths, header=None)
                    df.columns = columns

                    # Save the processed file
                    processed_file_path = os.path.join(folder_path, f"processed_{file_name}")
                    df.to_csv(processed_file_path, index=False)
                    print(f"Processed and saved: {processed_file_path}")
                except Exception as e:
                    messagebox.showerror("Error", f"Error processing file {file_name}: {e}")

        messagebox.showinfo("Completed", "All files have been processed successfully!")
    except Exception as e:
        messagebox.showerror("Error", f"Error reading the configuration file: {e}")

def select_folder_and_process():
    folder_path = filedialog.askdirectory(title="Select Folder")
    if folder_path:
        config_path = filedialog.askopenfilename(title="Select Config File", filetypes=[("JSON files", "*.json")])
        if config_path:
            process_fixed_width_files(folder_path, config_path)

# Create GUI window
root = tk.Tk()
root.title("Fixed Width File Processor")
root.geometry("400x200")

label = tk.Label(root, text="Select a folder containing files and a config file", font=("Arial", 12))
label.pack(pady=20)

select_button = tk.Button(root, text="Select Folder and Process", font=("Arial", 12), command=select_folder_and_process)
select_button.pack(pady=20)

# Start the main loop
root.mainloop()
